ALTER TABLE UTTAK_RESULTAT_PERIODE
  RENAME TO GAMMEL_UTTAK_RESULTAT_PERIODE;

CREATE TABLE UTTAK_RESULTAT_PERIODER (
  ID NUMBER(19, 0) NOT NULL,
  OPPRETTET_AV                 VARCHAR2(20 CHAR) DEFAULT 'VL'    NOT NULL,
  OPPRETTET_TID                TIMESTAMP(3) DEFAULT systimestamp NOT NULL,
  ENDRET_AV                    VARCHAR2(20 CHAR),
  ENDRET_TID                   TIMESTAMP(3),
  CONSTRAINT PK_UTTAK_RESULTAT_PERIODER PRIMARY KEY (ID)
);

CREATE TABLE UTTAK_RESULTAT_PERIODE (
  ID                           NUMBER(19, 0)                     NOT NULL,
  UTTAK_RESULTAT_PERIODER_ID   NUMBER(19, 0)                     NOT NULL,
  FOM                          TIMESTAMP(3)                      NOT NULL,
  TOM                          TIMESTAMP(3)                      NOT NULL,
  ARBFORHOLD_ORGNR             VARCHAR2(100 BYTE),
  ARBFORHOLD_ID                VARCHAR2(200 CHAR),
  STOENADSKONTOTYPE            VARCHAR2(100 CHAR)                NOT NULL,
  TREKKDAGER                   NUMBER(3, 0)                      NOT NULL CHECK (TREKKDAGER >= 0),
  TREKKDAGER_FLERBARN_KVOTE    NUMBER(3, 0)                      NOT NULL CHECK (TREKKDAGER_FLERBARN_KVOTE >= 0),
  GRADERING                    CHAR                              NOT NULL CHECK (GRADERING IN ('J', 'N')),
  PROSENT_ARBEID               NUMBER(5, 2)                      NOT NULL CHECK (PROSENT_ARBEID >= 0),
  PROSENT_UTBETALING           NUMBER(5, 2)                      NOT NULL CHECK (PROSENT_UTBETALING >= 0 AND PROSENT_UTBETALING <= 100),
  PERIODE_RESULTAT_TYPE        VARCHAR2(100 CHAR)                NOT NULL,
  PERIODE_RESULTAT_AARSAK      VARCHAR2(100 CHAR)                NOT NULL,
  GRADERING_AVSLAG_AARSAK      VARCHAR2(100 CHAR)                NOT NULL,
  MANUELL_BEHANDLING_AARSAK    VARCHAR2(100 CHAR)                NOT NULL,
  UTTAK_PERIODE_TYPE           VARCHAR2(100 CHAR)                NOT NULL,
  BEGRUNNELSE                  VARCHAR2(4000 CHAR),
  REGEL_INPUT                  CLOB,
  REGEL_EVALUERING             CLOB,
  KL_STOENADSKONTOTYPE         VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('STOENADSKONTOTYPE') VIRTUAL,
  KL_PERIODE_RESULTAT_TYPE     VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('PERIODE_RESULTAT_TYPE') VIRTUAL,
  KL_PERIODE_RESULTAT_AARSAK   VARCHAR2(100 CHAR)                NOT NULL,
  KL_GRADERING_AVSLAG_AARSAK   VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('GRADERING_AVSLAG_AARSAK') VIRTUAL,
  KL_MANUELL_BEHANDLING_AARSAK VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('MANUELL_BEHANDLING_AARSAK') VIRTUAL,
  KL_UTTAK_PERIODE_TYPE        VARCHAR2(100 CHAR) GENERATED ALWAYS AS ('UTTAK_PERIODE_TYPE') VIRTUAL,
  VERSJON                      NUMBER(19, 0) DEFAULT 0           NOT NULL,
  OPPRETTET_AV                 VARCHAR2(20 CHAR) DEFAULT 'VL'    NOT NULL,
  OPPRETTET_TID                TIMESTAMP(3) DEFAULT systimestamp NOT NULL,
  ENDRET_AV                    VARCHAR2(20 CHAR),
  ENDRET_TID                   TIMESTAMP(3),


  CONSTRAINT PK_UTTAK_RESULTAT_PERIODE_1 PRIMARY KEY (ID),
  CONSTRAINT FK_UTTAK_RESULTAT_PERIODE_01 FOREIGN KEY (UTTAK_RESULTAT_PERIODER_ID)
  REFERENCES UTTAK_RESULTAT_PERIODER (ID),
  CONSTRAINT FK_UTTAK_RESULTAT_PERIODE_02 FOREIGN KEY (STOENADSKONTOTYPE, KL_STOENADSKONTOTYPE) REFERENCES KODELISTE (KODE, KODEVERK),
  CONSTRAINT FK_UTTAK_RESULTAT_PERIODE_03 FOREIGN KEY (PERIODE_RESULTAT_TYPE, KL_PERIODE_RESULTAT_TYPE)
  REFERENCES KODELISTE (KODE, KODEVERK),
  CONSTRAINT FK_UTTAK_RESULTAT_PERIODE_04 FOREIGN KEY (PERIODE_RESULTAT_AARSAK, KL_PERIODE_RESULTAT_AARSAK)
  REFERENCES KODELISTE (KODE, KODEVERK),
  CONSTRAINT FK_UTTAK_RESULTAT_PERIODE_05 FOREIGN KEY (GRADERING_AVSLAG_AARSAK, KL_GRADERING_AVSLAG_AARSAK)
  REFERENCES KODELISTE (KODE, KODEVERK),
  CONSTRAINT FK_UTTAK_RESULTAT_PERIODE_06 FOREIGN KEY (MANUELL_BEHANDLING_AARSAK, KL_MANUELL_BEHANDLING_AARSAK)
  REFERENCES KODELISTE (KODE, KODEVERK),
  CONSTRAINT FK_UTTAK_RESULTAT_PERIODE_07 FOREIGN KEY (UTTAK_PERIODE_TYPE, KL_UTTAK_PERIODE_TYPE)
  REFERENCES KODELISTE (KODE, KODEVERK)
);

create INDEX IDX_UTTAK_RESULTAT_PERIODE on UTTAK_RESULTAT_PERIODE (UTTAK_RESULTAT_PERIODER_ID);

COMMENT ON TABLE UTTAK_RESULTAT_PERIODE IS 'Uttakresultatperiode';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.ID IS 'Primærnøkkel';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.UTTAK_RESULTAT_PERIODER_ID IS 'FK: UTTAK_RESULTAT|_PERIODER.';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.FOM IS 'Fra-og-med dato for uttaksresultatperiode.';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.TOM IS 'Til-og-med dato for uttaksresultatperiode.';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.ARBFORHOLD_ORGNR IS 'Arbeidsforhold-org.nr denne uttaksresultatperioden er knyttet til';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.ARBFORHOLD_ID IS 'Arbeidsforhold-id denne uttaksresultatperioden er knyttet til';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.STOENADSKONTOTYPE IS 'Hvilken stønadskonto det skal trekkes fra.';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.TREKKDAGER IS 'Antall virkedager som skal trekkes. Kan avvike fra antall virkedager i perioden.';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.TREKKDAGER_FLERBARN_KVOTE IS 'Antall virkedager som skal trekkes fra flerbarnkvote. Kan avvike fra antall virkedager i perioden.';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.BEGRUNNELSE IS 'Saksbehandlers begrunnelse (brukes ved manuell fastsetting og overstyring)';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.GRADERING IS '''J'' dersom bruker har en gradering ifm dette arbeidsforholdet, ellers ''N''.';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.PROSENT_ARBEID IS 'Hvor mange prosent bruker ønsker å arbeide i dette arbeidsforholdet.';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.REGEL_INPUT IS 'JSON representasjon av input';
COMMENT ON COLUMN UTTAK_RESULTAT_PERIODE.REGEL_EVALUERING IS 'JSON representasjon av evalurering';


CREATE SEQUENCE SEQ_UTTAK_RESULTAT_PERIODER MINVALUE 1000000 START WITH 1000000 INCREMENT BY 50 NOCACHE NOCYCLE;


CREATE TABLE UTTAK_RESULTAT (
  ID                      NUMBER(19, 0)                     NOT NULL,
  AKTIV                   CHAR                              NOT NULL CHECK (aktiv IN ('J', 'N')),
  BEHANDLING_RESULTAT_ID  NUMBER(19, 0)                     NOT NULL,
  OPPRINNELIG_PERIODER_ID NUMBER(19, 0)                     NOT NULL,
  OVERSTYRT_PERIODER_ID   NUMBER(19, 0),
  VERSJON                 NUMBER(19, 0) DEFAULT 0           NOT NULL,
  OPPRETTET_AV            VARCHAR2(20 CHAR) DEFAULT 'VL'    NOT NULL,
  OPPRETTET_TID           TIMESTAMP(3) DEFAULT systimestamp NOT NULL,
  ENDRET_AV               VARCHAR2(20 CHAR),
  ENDRET_TID              TIMESTAMP(3),

  CONSTRAINT PK_UTTAK_RESULTAT PRIMARY KEY (ID),
  CONSTRAINT FK_UTTAK_RESULTAT_1 FOREIGN KEY (BEHANDLING_RESULTAT_ID)
  REFERENCES BEHANDLING_RESULTAT (ID),
  CONSTRAINT FK_UTTAK_RESULTAT_2 FOREIGN KEY (OPPRINNELIG_PERIODER_ID)
  REFERENCES UTTAK_RESULTAT_PERIODER (ID),
  CONSTRAINT FK_UTTAK_RESULTAT_3 FOREIGN KEY (OVERSTYRT_PERIODER_ID)
  REFERENCES UTTAK_RESULTAT_PERIODER (ID)
);

--index for å sikre unikhet når aktiv=J
CREATE UNIQUE INDEX UIDX_UTTAK_RESULTAT_01
  ON UTTAK_RESULTAT (
    (CASE WHEN AKTIV = 'J'
      THEN BEHANDLING_RESULTAT_ID
     ELSE NULL END),
    (CASE WHEN AKTIV = 'J'
      THEN AKTIV
     ELSE NULL END)
  );


COMMENT ON COLUMN UTTAK_RESULTAT.OPPRINNELIG_PERIODER_ID IS 'Automatisk opprettet uttaksplan eller forslag til uttaksplan. Dekker perioder fra søknad.';
COMMENT ON COLUMN UTTAK_RESULTAT.OVERSTYRT_PERIODER_ID IS 'Manuelt fastsatt eller overstyrt uttaksplan. Dekker perioder fra søknad.';

CREATE SEQUENCE SEQ_UTTAK_RESULTAT MINVALUE 1000000 START WITH 1000000 INCREMENT BY 50 NOCACHE NOCYCLE;

INSERT INTO KODEVERK (kode, kodeverk_synk_nye, kodeverk_synk_eksisterende, navn, beskrivelse)
VALUES ('GRADERING_AVSLAG_AARSAK', 'N', 'N', 'Årsak til avslag om gradering av periode', 'Årsak til avslag om gradering av periode');

INSERT INTO KODELISTE (id, kode, navn, beskrivelse, kodeverk, gyldig_fom)
VALUES (seq_kodeliste.nextval, '-', 'Ikke definert', 'Ikke definert', 'GRADERING_AVSLAG_AARSAK', to_date('2000-01-01', 'YYYY-MM-DD'));

INSERT INTO KODEVERK (kode, kodeverk_synk_nye, kodeverk_synk_eksisterende, navn, beskrivelse)
VALUES ('MANUELL_BEHANDLING_AARSAK', 'N', 'N', 'Årsak til manuell behandling av periode', 'Årsak til manuell behandling av periode');

INSERT INTO KODELISTE (id, kode, navn, beskrivelse, kodeverk, gyldig_fom)
VALUES (seq_kodeliste.nextval, '-', 'Ikke definert', 'Ikke definert', 'MANUELL_BEHANDLING_AARSAK', to_date('2000-01-01', 'YYYY-MM-DD'));


INSERT INTO KODEVERK (kode, kodeverk_synk_nye, kodeverk_synk_eksisterende, navn, beskrivelse)
VALUES ('PERIODE_RESULTAT_AARSAK', 'N', 'N', 'Innvilgelses/avslagÅrsak for periode', 'Innvilgelses/avslagÅrsak for periode');

INSERT INTO KODELISTE (id, kode, navn, beskrivelse, kodeverk, gyldig_fom)
VALUES (seq_kodeliste.nextval, '-', 'Ikke definert', 'Ikke definert', 'PERIODE_RESULTAT_AARSAK', to_date('2000-01-01', 'YYYY-MM-DD'));
